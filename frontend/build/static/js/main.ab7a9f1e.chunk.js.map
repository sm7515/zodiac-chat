{"version":3,"sources":["config.js","components/register.js","components/login.js","components/colorSignMap.js","components/message.js","components/giphyList.js","components/giphy.js","components/composer.js","components/messenger.js","components/home.js","App.js","actions/userActions.js","actions/errorAction.js","serviceWorker.js","reducers/userReducer.js","reducers/errorReducer.js","store.js","index.js"],"names":["apiUrl","apiKey","Register","setError","error","className","onSubmit","e","name","currentTarget","value","pwd","password","dob","preventDefault","axios","post","then","window","location","catch","err","console","log","response","data","handleSubmit","htmlFor","type","required","max","Date","toJSON","slice","minlength","onClick","Login","setLogin","setName","setId","user","res","localStorage","setItem","id","getItem","colorSignMap","Aries","Taurus","Gemini","Cancer","Leo","Virgo","Libra","Scorpio","Sagittarius","Capricorn","Aquarius","Pisces","Message","border","this","props","sign","style","alignSelf","myName","flexDirection","borderLeft","borderRight","imgBg","time","timestamp","backgroundColor","src","img","alt","text","gif","getHours","getMinutes","getSeconds","Component","GiphyList","socket","gifs","clicked","map","ele","i","key","url","emit","handleClick","height","width","Giphy","useState","setGifs","done","setDone","searchTerm","setSearchTerm","setData","forEach","images","fixed_height_small","push","useEffect","get","length","placeholder","onChange","ev","search","target","Composer","state","submit","bind","click","bool","setState","autoComplete","autoFocus","href","display","Messenger","messages","logout","disconnect","io","connect","on","newMessages","msg","reverse","color","Home","setImg","setSign","uid","Axios","userReducer","errorReducer","dispatch","payload","message","exact","path","to","Boolean","hostname","match","action","loggedin","store","createStore","combineReducers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab7a9f1e.chunk.js","sourcesContent":["export const apiUrl = 'http://linserv1.cims.nyu.edu:23203';\nexport const apiKey = 'ur59uiFSFXhPV9VS4FacayxkgdT6YNsQ';\n","import React from 'react';\nimport axios from 'axios';\nimport { apiUrl } from '../config';\n\nexport default function Register({ setError, error }) {\n  const handleSubmit = (e) => {\n    const name = e.currentTarget.name.value;\n    const pwd = e.currentTarget.password.value;\n    const dob = e.currentTarget.dob.value;\n\n    e.preventDefault();\n    axios\n      .post(`${apiUrl}/register`, { name, pwd, dob })\n      .then(() => {\n        window.location = '/login';\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setError(err.response.data);\n      });\n  };\n\n  return (\n    <div className='register'>\n      <form onSubmit={(e) => handleSubmit(e)} className='register-form'>\n        <label htmlFor='name'>username: </label>\n        <input type='text' name='name' required />\n        <label htmlFor='dob'>Date of Birth</label>\n        <input\n          type='date'\n          name='dob'\n          max={new Date().toJSON().slice(0, 10)}\n          required\n        />\n        <label htmlFor='password'>password</label>\n        <input type='password' name='password' minlength='6' required />\n\n        <button type='submit'>Register</button>\n        <button\n          onClick={() => {\n            window.location = '/login';\n          }}\n        >\n          Login\n        </button>\n      </form>\n      {error.error !== '' && <p className='error'>{error.error}</p>}\n    </div>\n  );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { apiUrl } from '../config';\n\nexport default function Login({\n  setError,\n  error,\n  setLogin,\n  setName,\n  setId,\n  user,\n}) {\n  const handleSubmit = (e) => {\n    const name = e.currentTarget.name.value;\n    const pwd = e.currentTarget.password.value;\n\n    e.preventDefault();\n    axios\n      .post(`${apiUrl}/login`, { name, pwd })\n      .then((res) => {\n        localStorage.setItem('uid', res.data.id);\n        setName(res.data.name);\n        setId(res.data.id);\n        setLogin(user.id === localStorage.getItem('uid'));\n        setError('');\n      })\n      .catch((err) => {\n        console.log(err);\n        err.response && setError(err.response.data);\n      });\n  };\n  return (\n    <div className='login'>\n      <form onSubmit={(e) => handleSubmit(e)} className='login-form'>\n        <label htmlFor='name'>username: </label>\n        <input type='text' name='name' required />\n\n        <label htmlFor='password'>password</label>\n        <input type='password' name='password' required />\n\n        <button type='submit'>Login</button>\n        <button\n          onClick={() => {\n            window.location = '/';\n          }}\n        >\n          Register\n        </button>\n      </form>\n      {error.error !== '' && <p className='error'>{error.error}</p>}\n    </div>\n  );\n}\n","const colorSignMap = {\n  Aries: '#ff5353',\n  Taurus: '#80c181',\n  Gemini: '#ffe153',\n  Cancer: '#c8c8c8',\n  Leo: '#ffa359',\n  Virgo: '#b08266',\n  Libra: '#fdbebc',\n  Scorpio: '#242424',\n  Sagittarius: '#c0adef',\n  Capricorn: '#666b66',\n  Aquarius: '#80bfea',\n  Pisces: '#a1e2c4',\n};\n\nexport default colorSignMap;\n","import React, { Component } from 'react';\nimport colorSignMap from './colorSignMap';\n\nclass Message extends Component {\n  render() {\n    let border = '10px solid' + colorSignMap[this.props.sign];\n\n    //Style messages based on whether or not they belong to us\n    let style = {\n      alignSelf: this.props.myName ? 'flex-end' : 'flex-start',\n      flexDirection: this.props.myName ? 'row-reverse' : 'row',\n      borderLeft: this.props.myName ? 'none' : border,\n      borderRight: this.props.myName ? border : 'none',\n    };\n\n    let imgBg = colorSignMap[this.props.sign];\n\n    let time = new Date(this.props.timestamp);\n    return (\n      <div className='Message' style={style}>\n        <div className='profile-img' style={{ backgroundColor: `${imgBg}` }}>\n          <img src={this.props.img} alt='zodiac-sign'></img>\n        </div>\n        {this.props.text && <p>{this.props.text}</p>}\n        {this.props.gif && <img alt='gif' src={this.props.gif}></img>}\n        <span className='timestamp'>\n          <span>{this.props.name}</span>\n          {time.getHours() + ':' + time.getMinutes() + ':' + time.getSeconds()}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Message;\n","import React from 'react';\n\nexport default function GiphyList({ socket, gifs, user, clicked }) {\n  const handleClick = (e) => {\n    socket.emit('new gif', [e.currentTarget.src, user]);\n    clicked(false);\n  };\n\n  return (\n    <div className='gif-items'>\n      {gifs.map((ele, i) => {\n        return (\n          <div className='gif-item'>\n            <img\n              key={i}\n              alt={`gif ${i}`}\n              src={ele.img.url}\n              onClick={(e) => {\n                handleClick(e);\n              }}\n              height={ele.img.height * 0.8}\n              width='100px'\n            ></img>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport GiphyList from './giphyList';\nimport colorSignMap from './colorSignMap';\nimport { apiKey } from '../config';\n\nexport default function Giphy({ socket, user, clicked }) {\n  let [gifs, setGifs] = useState([]);\n  let [done, setDone] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const setData = (data) => {\n    gifs = [];\n    data.forEach((ele) => {\n      const gif = { img: ele.images.fixed_height_small };\n      gifs.push(gif);\n    });\n    setGifs(gifs);\n    done = true;\n    setDone(done);\n  };\n\n  const fetchBySearch = () => {\n    axios\n      .get(\n        `http://api.giphy.com/v1/gifs/search?q=${searchTerm}&api_key=${apiKey}&limit=24`,\n      )\n      .then((res) => {\n        console.log(res.data);\n        setData(res.data.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const fetchTrending = () => {\n    axios\n      .get(`http://api.giphy.com/v1/gifs/trending?api_key=${apiKey}&limit=24`)\n      .then((res) => {\n        setData(res.data.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleSearchBarChange = (search) => {\n    setSearchTerm(search);\n  };\n\n  useEffect(() => {\n    console.log(searchTerm);\n    searchTerm !== '' ? fetchBySearch(searchTerm) : fetchTrending();\n  }, [searchTerm]);\n\n  useEffect(() => {\n    if (done) {\n      setDone(false);\n      console.log(gifs.length);\n    }\n  }, [done]);\n\n  return (\n    <div className='emoji-container'>\n      {gifs.length !== 0 && (\n        <GiphyList socket={socket} gifs={gifs} user={user} clicked={clicked} />\n      )}\n      <input\n        type='text'\n        placeholder='Search GIPHY...'\n        value={searchTerm}\n        onChange={(ev) => handleSearchBarChange(ev.target.value)}\n        style={{ backgroundColor: `${colorSignMap[user.sign]}` }}\n      />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Giphy from './giphy';\nimport colorSignMap from './colorSignMap';\n\nclass Composer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clicked: false,\n    };\n    this.submit = this.submit.bind(this);\n    this.click = this.click.bind(this);\n  }\n\n  submit(e) {\n    //When entering a message. Send it to the server and clear value the input\n    e.preventDefault();\n    this.props.socket.emit('new message', [\n      e.target.text.value,\n      this.props.user,\n    ]);\n    e.target.text.value = '';\n  }\n\n  click(bool) {\n    this.setState({ clicked: bool });\n  }\n\n  render() {\n    return (\n      <div className='total-container'>\n        <form onSubmit={this.submit} className='composer-container'>\n          <input\n            autoComplete='off'\n            name='text'\n            className='composer'\n            autoFocus={true}\n          ></input>\n        </form>\n        <button\n          className='emoji-picker'\n          onClick={() => this.setState({ clicked: !this.state.clicked })}\n        >\n          <a\n            href='https://icons8.com/icon/85774/happy'\n            style={{ display: 'none' }}\n          >\n            Happy icon by Icons8\n          </a>\n          <img\n            src={`https://img.icons8.com/material-outlined/48/${colorSignMap[\n              this.props.user.sign\n            ].slice(1)}/happy.png`}\n          />\n        </button>\n        {this.state.clicked && (\n          <Giphy\n            socket={this.props.socket}\n            user={this.props.user}\n            clicked={this.click}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Composer;\n","import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport { apiUrl } from '../config';\nimport Message from './message';\nimport Composer from './composer';\nimport colorSignMap from './colorSignMap';\n\nclass Messenger extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      messages: [],\n    };\n    this.logout = this.logout.bind(this);\n  }\n\n  logout() {\n    axios\n      .post(`${apiUrl}/login/logout`, {\n        id: this.props.user.id,\n      })\n      .then((res) => {\n        console.log(res);\n        localStorage.setItem('uid', '');\n        this.props.setLogin(false);\n        this.socket.disconnect();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  componentDidMount() {\n    this.socket = io.connect(`${apiUrl}`);\n    this.socket.on('connect', () => {\n      this.socket.emit('request sign', [\n        this.props.user.sign,\n        this.props.user.name,\n        this.props.user.img,\n      ]);\n    });\n\n    this.socket.on('new message', (data) => {\n      let newMessages = this.state.messages.slice();\n      newMessages.push(data);\n      this.setState({ messages: newMessages });\n    });\n\n    this.socket.on('socket in use', () => {\n      window.location = '/login';\n    });\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    let data = this.state.messages\n      .map((msg, i) => {\n        return (\n          <Message\n            myName={msg.name === this.props.user.name}\n            text={msg.text && msg.text}\n            gif={msg.gif && msg.gif}\n            sign={msg.sign}\n            timestamp={msg.timestamp}\n            img={msg.img}\n            name={msg.name}\n            key={i}\n          />\n        );\n      })\n      .reverse();\n\n    return (\n      <div>\n        <button\n          onClick={this.logout}\n          className='logout'\n          style={{\n            border: `2px solid ${colorSignMap[this.props.user.sign]}`,\n            color: `${colorSignMap[this.props.user.sign]}`,\n          }}\n        >\n          logout\n        </button>\n        <div className='container'>\n          <div className='messages'>{data}</div>\n        </div>\n        <div className='text-area'>\n          <Composer socket={this.socket} user={this.props.user} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Messenger;\n","import React, { useEffect, useState } from 'react';\nimport Messenger from './messenger';\nimport Axios from 'axios';\nimport { apiUrl } from '../config';\n\nexport default function Home({ setLogin, user, setImg, setSign, setName }) {\n  let uid = localStorage.getItem('uid');\n  let [done, setDone] = useState(false);\n\n  useEffect(() => {\n    uid = localStorage.getItem('uid');\n    user.id = uid;\n    uid !== '' &&\n      Axios.get(`${apiUrl}/user?id=${uid}`)\n        .then((res) => {\n          user.name = res.data.name;\n          user.sign = res.data.sign;\n          user.img = res.data.img;\n          setImg(user.img);\n          setSign(user.sign);\n          setName(user.name);\n          console.log(user);\n          done = true;\n          setDone(done);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  }, []);\n\n  return (\n    <div className='home'>\n      {user.sign !== '' && user.img !== '' && done && (\n        <Messenger user={user} setLogin={setLogin} />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { Route, BrowserRouter as Router, Redirect } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport {\n  setName,\n  setSign,\n  setLogin,\n  setImg,\n  setId,\n} from './actions/userActions';\nimport { setError } from './actions/errorAction';\n\nimport Register from './components/register';\nimport Login from './components/login';\nimport Home from './components/home';\n\nfunction App(props) {\n  return (\n    <div className='App'>\n      <Router>\n        <Route exact path='/'>\n          {localStorage.getItem('uid') === '' ? (\n            <Register setError={props.setError} error={props.error} />\n          ) : (\n            <Redirect to='/home' />\n          )}\n        </Route>\n\n        <Route exact path='/login'>\n          {localStorage.getItem('uid') === '' ||\n          localStorage.getItem('uid') !== props.user.id ? (\n            <Login\n              setError={props.setError}\n              error={props.error}\n              setLogin={props.setLogin}\n              setName={props.setName}\n              setId={props.setId}\n              user={props.user}\n            />\n          ) : (\n            <Redirect to='/home' />\n          )}\n        </Route>\n\n        <Route exact path='/home'>\n          {localStorage.getItem('uid') !== '' ? (\n            <Home\n              setLogin={props.setLogin}\n              user={props.user}\n              setSign={props.setSign}\n              setImg={props.setImg}\n              setId={props.setId}\n              setName={props.setName}\n            />\n          ) : (\n            <Redirect to='/login' />\n          )}\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { user: state.userReducer, error: state.errorReducer };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setName: (name) => {\n      dispatch(setName(name));\n    },\n    setId: (id) => {\n      dispatch(setId(id));\n    },\n    setSign: (sign) => {\n      dispatch(setSign(sign));\n    },\n    setImg: (url) => {\n      dispatch(setImg(url));\n    },\n    setLogin: (uid) => {\n      dispatch(setLogin(uid));\n    },\n    setError: (msg) => {\n      dispatch(setError(msg));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export function setName(name) {\n  return {\n    type: 'SET_NAME',\n    payload: name,\n  };\n}\n\nexport function setId(id) {\n  return {\n    type: 'SET_ID',\n    payload: id,\n  };\n}\n\nexport function setSign(sign) {\n  return {\n    type: 'SET_SIGN',\n    payload: sign,\n  };\n}\n\nexport function setLogin(bool) {\n  return {\n    type: 'SET_LOGIN',\n    payload: bool,\n  };\n}\n\nexport function setImg(url) {\n  return {\n    type: 'SET_IMG',\n    payload: url,\n  };\n}\n","export function setError(message) {\n  return {\n    type: 'SET_ERROR',\n    payload: message,\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const userReducer = (\n  state = { name: '', sign: '', img: '', id: '' },\n  action,\n) => {\n  switch (action.type) {\n    case 'SET_NAME':\n      state = { ...state, name: action.payload };\n      break;\n\n    case 'SET_ID':\n      state = { ...state, id: action.payload };\n      break;\n\n    case 'SET_SIGN':\n      state = { ...state, sign: action.payload };\n      break;\n\n    case 'SET_IMG':\n      state = { ...state, img: action.payload };\n      break;\n\n    case 'SET_LOGIN':\n      state = { ...state, loggedin: action.payload };\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default userReducer;\n","const errorReducer = (state = { error: '' }, action) => {\n  if (action.type === 'SET_ERROR') {\n    state = { ...state, error: action.payload };\n  }\n  return state;\n};\n\nexport default errorReducer;\n","import { createStore, combineReducers } from 'redux';\nimport userReducer from './reducers/userReducer';\nimport errorReducer from './reducers/errorReducer';\n\nconst store = createStore(combineReducers({ userReducer, errorReducer }));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}